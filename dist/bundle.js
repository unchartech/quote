(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Quote"] = factory();
	else
		root["Quote"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js!./src/index.css":
/*!*************************************************!*\
  !*** ./node_modules/css-loader!./src/index.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".cdx-quote-icon svg {\\n    transform: rotate(180deg);\\n}\\n\\n.cdx-quote {\\n    padding: 30px 35px 18px 35px;\\n    background-color: #f7f9fa;\\n    border-radius: 4px;\\n    margin: 0 0 10px;\\n}\\n\\n.cdx-quote__caption-wrapper {\\n    display: flex;\\n    align-items: flex-start;\\n    justify-content: space-between;\\n    overflow: hidden;\\n    width: 100%;\\n    padding: 0;\\n}\\n\\n.cdx-quote.cdx-quote--no-caption .cdx-quote__caption-wrapper{\\n    display: none;\\n}\\n\\n.cdx-quote.cdx-quote--has-caption .cdx-quote__caption--left{\\n    display: none;\\n}\\n\\n.cdx-quote.cdx-quote--has-caption .cdx-quote__caption--right{\\n    width: 100%;\\n}\\n\\n.cdx-quote.cdx-quote--has-captions {\\n\\n}\\n\\n.cdx-quote__text {\\n    min-height: 58px;\\n    margin-bottom: 0;\\n    background-color: inherit;\\n    border: none;\\n    box-shadow: none;\\n}\\n\\n.cdx-quote__caption--left {\\n    font-size: 0.8rem;\\n    border: none;\\n    width: 30%;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n}\\n\\n.cdx-quote__caption--image {\\n    position: absolute;\\n    right: 28px;\\n    top: 45px;\\n    width: 72px;\\n    height: 72px;\\n}\\n\\n.cdx-quote__image--quote {\\n    position: absolute;\\n    left: 28px;\\n    top: 18px;\\n    width: 36px;\\n    height: 32px;\\n    background-repeat: no-repeat;\\n    background-image: url(\\\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='36px' height='32px' viewBox='0 0 36 32' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EFill 1%3C/title%3E%3Cdefs%3E%3Cpath d='M444.375723 396.635481 C444.375723 398.395853 445.763006 402.112196 446.780347 404.165964 C445.393064 405.241747 438.456647 408.2735 435.774566 407.980105 C434.202312 406.317531 433 402.992382 433 400.743017 C433 392.919138 438.82659 383.041491 446.040462 376 L449 378.444962 C445.763006 383.921677 444.375723 389.202796 444.375723 396.635481 M424.468208 396.635481 C424.468208 398.395853 425.763006 402.112196 426.687861 404.165964 C425.485549 405.241747 418.456647 408.2735 415.774566 407.980105 C414.294798 406.317531 413 402.992382 413 400.743017 C413 392.919138 418.734104 383.041491 426.132948 376 L429 378.444962 C425.763006 383.921677 424.468208 389.202796 424.468208 396.635481' id='path-1'%3E%3C/path%3E%3C/defs%3E%3Cg id='Quote' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='Fill-1' transform='translate(-413.000000  -376.000000)'%3E%3Cuse fill='%23FFFFFF' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill-opacity='0.12' fill='%2318805A' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n}\\n\\n.cdx-quote__caption--right {\\n    font-size: 0.8rem;\\n    border: none;\\n    text-align: right;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n}\\n\\n.cdx-quote__caption--left[contentEditable=true][data-placeholder]:focus, .cdx-quote__caption--right[contentEditable=true][data-placeholder]:focus {\\n    overflow: auto;\\n    white-space: normal;\\n    text-overflow: inherit;\\n}\\n\\n.cdx-quote .cdx-quote__caption--right[contentEditable=true][data-placeholder]::before {\\n    position: absolute !important;\\n    right: 105px;\\n}\\n\\n.cdx-quote .cdx-quote__caption--right[contentEditable=true][data-placeholder]:empty::before {\\n    opacity: 1;\\n}\\n\\n.cdx-quote [contentEditable=true][data-placeholder]::before {\\n    position: absolute;\\n    content: attr(data-placeholder);\\n    color: #707684;\\n    font-weight: normal;\\n    opacity: 0;\\n}\\n\\n.cdx-quote [contentEditable=true][data-placeholder]:empty::before {\\n    opacity: 1;\\n}\\n\\n.cdx-quote [contentEditable=true][data-placeholder]:empty:focus::before {\\n    opacity: 0;\\n}\\n\\n.cdx-quote [contentEditable=true][data-placeholder]:focus {\\n    background-color: #fefefe;\\n}\\n\\n.cdx-quote-settings {\\n    display: flex;\\n}\\n\\n.cdx-quote-settings .cdx-settings-button {\\n    width: 50%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://Quote/./src/index.css?./node_modules/css-loader");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack://Quote/./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack://Quote/./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack://Quote/./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../node_modules/css-loader!./index.css */ \"./node_modules/css-loader/index.js!./src/index.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://Quote/./src/index.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Build styles\n */\n__webpack_require__(/*! ./index.css */ \"./src/index.css\").toString();\n\nvar isDevelopment = \"development\" === 'development';\nvar QUOTE_SETTINGS = {\n  NO_CAPTION: 'NO_CAPTION',\n  WITH_CAPTION: 'WITH_CAPTION',\n  WITH_CAPTION_TEMPLATE: 'WITH_CAPTION_TEMPLATE'\n};\n\nif (isDevelopment) {\n  console.log('@editorjs/quote fork');\n}\n/**\n * @class Quote\n * @classdesc Quote Tool for Editor.js\n * @property {QuoteData} data - Tool`s input and output data\n * @propert {object} api - Editor.js API instance\n *\n * @typedef {object} QuoteData\n * @description Quote Tool`s input and output data\n * @property {string} text - quote`s text\n * @property {string} caption - quote`s caption\n * @property {'center'|'left'} alignment - quote`s alignment\n *\n * @typedef {object} QuoteConfig\n * @description Quote Tool`s initial configuration\n * @property {string} quotePlaceholder - placeholder to show in quote`s text input\n * @property {string} captionPlaceholder - placeholder to show in quote`s caption input\n * @property {QUOTE_SETTINGS} defaultAlignment - alignment to use as default\n */\n\n\nvar Quote =\n/*#__PURE__*/\nfunction () {\n  _createClass(Quote, [{\n    key: \"CSS\",\n\n    /**\n     * Tool`s styles\n     *\n     * @returns {{baseClass: string, wrapper: string, quote: string, input: string, caption: string, settingsButton: string, settingsButtonActive: string}}\n     */\n    get: function get() {\n      var _ref;\n\n      return _ref = {\n        baseClass: this.api.styles.block,\n        wrapper: 'cdx-quote',\n        captionWrapper: 'cdx-quote__caption-wrapper',\n        text: 'cdx-quote__text',\n        input: this.api.styles.input,\n        captionLeft: 'cdx-quote__caption--left',\n        captionRight: 'cdx-quote__caption--right',\n        captionImage: 'cdx-quote__caption--image',\n        imageQuote: 'cdx-quote__image--quote',\n        settingsWrapper: 'cdx-quote-settings',\n        settingsButton: this.api.styles.settingsButton,\n        settingsButtonActive: this.api.styles.settingsButtonActive\n      }, _defineProperty(_ref, QUOTE_SETTINGS.NO_CAPTION, 'cdx-quote--no-caption'), _defineProperty(_ref, QUOTE_SETTINGS.WITH_CAPTION, 'cdx-quote--has-caption'), _defineProperty(_ref, QUOTE_SETTINGS.WITH_CAPTION_TEMPLATE, 'cdx-quote--has-captions'), _ref;\n    }\n    /**\n     * Tool`s settings properties\n     *\n     * @returns {*[]}\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return [{\n        name: QUOTE_SETTINGS.NO_CAPTION,\n        icon: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"20\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\\\"/></svg>\"\n      }, {\n        name: QUOTE_SETTINGS.WITH_CAPTION,\n        icon: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/><path d=\\\"M19 5H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 12H5V7h14v10z\\\"/></svg>\"\n      }, {\n        name: QUOTE_SETTINGS.WITH_CAPTION_TEMPLATE,\n        icon: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" width=\\\"24\\\" height=\\\"24\\\" style=\\\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);\\\" preserveAspectRatio=\\\"xMidYMid meet\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M3 5v14h19V5H3m2 2h15v4H5V7m0 10v-4h4v4H5m6 0v-4h9v4h-9z\\\"/></svg>\"\n      }];\n    }\n    /**\n     * Render plugin`s main Element and fill it with saved data\n     *\n     * @param {{data: QuoteData, config: QuoteConfig, api: object}}\n     *   data — previously saved data\n     *   config - user config for Tool\n     *   api - Editor.js API\n     *   readOnly - read-only mode flag\n     */\n\n  }], [{\n    key: \"isReadOnlySupported\",\n\n    /**\n     * Notify core that read-only mode is supported\n     *\n     * @returns {boolean}\n     */\n    get: function get() {\n      return true;\n    }\n    /**\n     * Get Tool toolbox settings\n     * icon - Tool icon's SVG\n     * title - title to show in toolbox\n     *\n     * @returns {{icon: string, title: string}}\n     */\n\n  }, {\n    key: \"toolbox\",\n    get: function get() {\n      return {\n        icon: '<svg width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.53 6.185l.027.025a1.109 1.109 0 0 1 0 1.568l-5.644 5.644a1.109 1.109 0 1 1-1.569-1.568l4.838-4.837L6.396 2.23A1.125 1.125 0 1 1 7.986.64l5.52 5.518.025.027zm-5.815 0l.026.025a1.109 1.109 0 0 1 0 1.568l-5.644 5.644a1.109 1.109 0 1 1-1.568-1.568l4.837-4.837L.58 2.23A1.125 1.125 0 0 1 2.171.64L7.69 6.158l.025.027z\" /></svg>',\n        title: 'Quote'\n      };\n    }\n    /**\n     * Empty Quote is not empty Block\n     *\n     * @public\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"contentless\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Allow to press Enter inside the Quote\n     *\n     * @public\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"enableLineBreaks\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Default placeholder for quote text\n     *\n     * @public\n     * @returns {string}\n     */\n\n  }, {\n    key: \"DEFAULT_QUOTE_PLACEHOLDER\",\n    get: function get() {\n      return 'Enter a quote';\n    }\n    /**\n     * Default placeholder for quote caption\n     *\n     * @public\n     * @returns {string}\n     */\n\n  }, {\n    key: \"DEFAULT_CAPTION_PLACEHOLDER\",\n    get: function get() {\n      return 'Enter a caption';\n    }\n    /**\n     * Allowed quote options\n     *\n     * @public\n     * @returns {{noCaption: string, hasCaption: string, hasCaptions: string}}\n     */\n\n  }, {\n    key: \"CAPTIONS\",\n    get: function get() {\n      return QUOTE_SETTINGS;\n    }\n    /**\n     * Default quote alignment\n     *\n     * @public\n     * @returns {string}\n     */\n\n  }, {\n    key: \"DEFAULT_CAPTIONS\",\n    get: function get() {\n      return Quote.CAPTIONS['with_caption_template'];\n    }\n    /**\n     * Allow Quote to be converted to/from other blocks\n     */\n\n  }, {\n    key: \"conversionConfig\",\n    get: function get() {\n      return {\n        /**\n         * To create Quote data from string, simple fill 'text' property\n         */\n        import: 'text',\n\n        /**\n         * To create string from Quote data, concatenate text and caption\n         *\n         * @param {QuoteData} quoteData\n         * @returns {string}\n         */\n        export: function _export(quoteData) {\n          return quoteData.captionLeft ? \"\".concat(quoteData.text, \" \\u2014 \").concat(quoteData.captionLeft, \" \\u2014 \").concat(quoteData.captionRight) : quoteData.text;\n        }\n      };\n    }\n  }]);\n\n  function Quote(_ref2) {\n    var data = _ref2.data,\n        config = _ref2.config,\n        api = _ref2.api,\n        readOnly = _ref2.readOnly;\n\n    _classCallCheck(this, Quote);\n\n    var CAPTIONS = Quote.CAPTIONS,\n        DEFAULT_CAPTIONS = Quote.DEFAULT_CAPTIONS;\n    this.api = api;\n    this.readOnly = readOnly;\n    this.quotePlaceholder = config.quotePlaceholder || Quote.DEFAULT_QUOTE_PLACEHOLDER;\n    this.captionPlaceholder = config.captionPlaceholder || Quote.DEFAULT_CAPTION_PLACEHOLDER;\n    this.data = {\n      text: data.text || '',\n      captionLeft: data.captionLeft || '',\n      captionRight: data.captionRight || '',\n      imageUrl: data.imageUrl || null,\n      hasQuoteIcon: data.hasQuoteIcon || true,\n      captionView: Object.values(CAPTIONS).includes(data.captionView) && data.captionView || DEFAULT_CAPTIONS\n    };\n  }\n  /**\n   * Create Quote Tool container with inputs\n   *\n   * @returns {Element}\n   */\n\n\n  _createClass(Quote, [{\n    key: \"render\",\n    value: function render() {\n      var container = this._make('blockquote', [this.CSS.baseClass, this.CSS.wrapper, this.CSS[QUOTE_SETTINGS[this.data.captionView]]]);\n\n      var quote = this._make('div', [this.CSS.input, this.CSS.text], {\n        contentEditable: !this.readOnly,\n        innerHTML: this.data.text,\n        style: {\n          paddingRight: this.data.imageUrl ? '76px' : '12px'\n        }\n      });\n\n      var captionWrapper = this._make('div', [this.CSS.baseClass, this.CSS.captionWrapper], {\n        style: {\n          textIndent: this.data.hasQuoteIcon ? '28px' : '0'\n        }\n      });\n\n      var captionLeft = this._make('div', [this.CSS.input, this.CSS.captionLeft], {\n        contentEditable: !this.readOnly,\n        innerHTML: this.data.captionLeft\n      });\n\n      var captionRight = this._make('div', [this.CSS.input, this.CSS.captionRight], {\n        contentEditable: !this.readOnly,\n        innerHTML: this.data.captionRight\n      });\n\n      var captionImage = this._make('img', [this.CSS.captionImage], {\n        contentEditable: false,\n        src: this.data.imageUrl\n      });\n\n      var imageQuote = this._make('div', [this.CSS.imageQuote], {\n        contentEditable: false\n      });\n\n      quote.dataset.placeholder = this.quotePlaceholder;\n      captionLeft.dataset.placeholder = this.captionPlaceholder;\n      captionRight.dataset.placeholder = this.captionPlaceholder;\n      container.appendChild(quote);\n\n      if (this.data.hasQuoteIcon) {\n        container.appendChild(imageQuote);\n      }\n\n      if (this.data.imageUrl) {\n        container.appendChild(captionImage);\n      }\n\n      captionWrapper.appendChild(captionLeft);\n      captionWrapper.appendChild(captionRight);\n      container.appendChild(captionWrapper);\n      this._container = container;\n      return container;\n    }\n    /**\n     * Extract Quote data from Quote Tool element\n     *\n     * @param {HTMLDivElement} quoteElement - element to save\n     * @returns {QuoteData}\n     */\n\n  }, {\n    key: \"save\",\n    value: function save(quoteElement) {\n      var text = quoteElement.querySelector(\".\".concat(this.CSS.text));\n      var captionLeft = quoteElement.querySelector(\".\".concat(this.CSS.captionLeft));\n      var captionRight = quoteElement.querySelector(\".\".concat(this.CSS.captionRight));\n      var captionImage = quoteElement.querySelector(\".\".concat(this.CSS.captionImage));\n      return Object.assign(this.data, {\n        text: text.innerHTML,\n        captionLeft: captionLeft.innerHTML,\n        captionRight: captionRight.innerHTML,\n        imageUrl: captionImage ? captionImage.getAttribute('src') : null\n      });\n    }\n    /**\n     * Sanitizer rules\n     */\n\n  }, {\n    key: \"renderSettings\",\n\n    /**\n     * Create wrapper for Tool`s settings buttons:\n     * 1. Left alignment\n     * 2. Center alignment\n     *\n     * @returns {HTMLDivElement}\n     */\n    value: function renderSettings() {\n      var _this = this;\n\n      var wrapper = this._make('div', [this.CSS.settingsWrapper], {});\n\n      var capitalize = function capitalize(str) {\n        return str[0].toUpperCase() + str.substr(1);\n      };\n\n      this.settings.map(function (tune) {\n        var el = _this._make('div', _this.CSS.settingsButton, {\n          innerHTML: tune.icon,\n          title: capitalize(tune.name.toLowerCase()).replace(/(_)/g, ' ')\n        });\n\n        el.classList.toggle(_this.CSS.settingsButtonActive, tune.name === _this.data.captionView);\n        wrapper.appendChild(el);\n        return el;\n      }).forEach(function (element, index, elements) {\n        element.addEventListener('click', function () {\n          _this._toggleTune(_this.settings[index].name);\n\n          elements.forEach(function (el, i) {\n            var name = _this.settings[i].name;\n            el.classList.toggle(_this.CSS.settingsButtonActive, name === _this.data.captionView);\n          });\n        });\n      });\n      return wrapper;\n    }\n  }, {\n    key: \"_toggleTune\",\n\n    /**\n     * Toggle quote`s alignment\n     *\n     * @param {string} tune - alignment\n     * @private\n     */\n    value: function _toggleTune(tune) {\n      var _this$_container$clas;\n\n      this.data.captionView = tune;\n      if (!Object.values(QUOTE_SETTINGS).includes(tune)) return;\n      var captionClasses = [this.CSS[QUOTE_SETTINGS.NO_CAPTION], this.CSS[QUOTE_SETTINGS.WITH_CAPTION], this.CSS[QUOTE_SETTINGS.WITH_CAPTION_TEMPLATE]];\n\n      (_this$_container$clas = this._container.classList).remove.apply(_this$_container$clas, captionClasses);\n\n      this._container.classList.add(this.CSS[tune]);\n    }\n    /**\n     * Helper for making Elements with attributes\n     *\n     * @param  {string} tagName           - new Element tag name\n     * @param  {Array|string} classNames  - list or name of CSS classname(s)\n     * @param  {object} attributes        - any attributes\n     * @returns {Element}\n     */\n\n  }, {\n    key: \"_make\",\n    value: function _make(tagName) {\n      var classNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var el = document.createElement(tagName);\n\n      if (Array.isArray(classNames)) {\n        var _el$classList;\n\n        (_el$classList = el.classList).add.apply(_el$classList, _toConsumableArray(classNames));\n      } else if (classNames) {\n        el.classList.add(classNames);\n      }\n\n      for (var attrName in attributes) {\n        el[attrName] = attributes[attrName];\n      }\n\n      return el;\n    }\n  }], [{\n    key: \"sanitize\",\n    get: function get() {\n      return {\n        text: {\n          br: true\n        },\n        captionLeft: {\n          br: true\n        },\n        captionRight: {\n          br: true\n        },\n        captionView: {}\n      };\n    }\n  }]);\n\n  return Quote;\n}();\n\nmodule.exports = Quote;\n\n//# sourceURL=webpack://Quote/./src/index.js?");

/***/ })

/******/ });
});